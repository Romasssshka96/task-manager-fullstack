{"ast":null,"code":"import _objectSpread from\"E:/1practick_js/task-manager/tasc-manager/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect}from'react';import{serverGetTasks,serverDeleteTask,serverAddTask,serverMarkTaskAsDone,serverEditTask}from'../../services/task';import Panel from'../panel/Panel';import List from'../list/List';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[task,setTask]=useState([]);const[selectedItems,setSelectedItems]=useState([]);const[filter,setFilter]=useState('all');const[editedId,setEditedId]=useState(null);const[editedText,setEditedText]=useState('');console.log(editedText);useEffect(()=>{serverGetTasks().then(setTask);},[]);const addTask=async text=>{if(text){const newTask=await serverAddTask(text);//захист від пустого інпуту\nsetTask([...task,newTask]);//формування данних таски \n//{id: randomInteger(0, 10000), text, done: false}\n}};const selectTask=id=>{setSelectedItems(prev=>prev.includes(id)?prev.filter(i=>i!==id):[...prev,id]//додавання в стейт id тих таск які обрані користувачем \n);};const toogleStatus=async()=>{await serverMarkTaskAsDone(selectedItems);setTask(prev=>prev.map(task=>selectedItems.includes(task.id)?_objectSpread(_objectSpread({},task),{},{done:!task.done}):task));//зміна поля done\nsetSelectedItems([]);};const deleteTask=async()=>{await serverDeleteTask(selectedItems);setTask(prev=>prev.filter(task=>!selectedItems.includes(task.id)));//фільтрація стейту з тасками по id, ті що обрані будуть відалені фільтрацією\nsetSelectedItems([]);};const filterTasks=(items,filter)=>{if(filter==='done'){return items.filter(item=>item.done);}if(filter==='unDone'){return items.filter(item=>!item.done);}else{return items;}};const updateList=filter=>{setFilter(filter);};const startEdit=(id,currentText)=>{console.log(id,currentText);setEditedId(id);setEditedText(currentText);};const cancelEdit=()=>{setEditedId(null);setEditedText('');};const saveEdit=async id=>{const update=await serverEditTask(id,editedText);console.log(update);setTask(prevTasks=>prevTasks.map(item=>item.id===id?update:item));cancelEdit();// сбрасываем редактирование\n};const listOfTasks=filterTasks(task,filter);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Panel,{addTask:addTask,toogleStatus:toogleStatus,deleteTask:deleteTask,selectedItems:selectedItems,updateList:updateList,filter:filter}),/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(List,{task:listOfTasks,selectTask:selectTask,selectedItems:selectedItems,startEdit:startEdit,saveEdit:saveEdit,setEditedText:setEditedText,cancelEdit:cancelEdit,editedId:editedId,editedText:editedText})})]});}export default App;","map":{"version":3,"names":["useState","useEffect","serverGetTasks","serverDeleteTask","serverAddTask","serverMarkTaskAsDone","serverEditTask","Panel","List","jsx","_jsx","jsxs","_jsxs","App","task","setTask","selectedItems","setSelectedItems","filter","setFilter","editedId","setEditedId","editedText","setEditedText","console","log","then","addTask","text","newTask","selectTask","id","prev","includes","i","toogleStatus","map","_objectSpread","done","deleteTask","filterTasks","items","item","updateList","startEdit","currentText","cancelEdit","saveEdit","update","prevTasks","listOfTasks","className","children"],"sources":["E:/1practick_js/task-manager/tasc-manager/client/src/components/app/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { serverGetTasks, serverDeleteTask, serverAddTask, serverMarkTaskAsDone, serverEditTask } from '../../services/task';\n\nimport Panel from '../panel/Panel';\nimport List from '../list/List';\nimport './App.css';\n\nfunction App() {\n\n  \tconst [task, setTask] = useState([])\n  \tconst [selectedItems, setSelectedItems] = useState([])\n\tconst [filter, setFilter] = useState('all')\n\tconst [editedId, setEditedId] = useState(null)\n\tconst [editedText, setEditedText] = useState('')\n\t\n\tconsole.log(editedText);\n\n\tuseEffect(()=>{\n\t\tserverGetTasks()\n\t\t.then(setTask)\n\t}, [])\n\n \n\n\tconst addTask = async (text) =>{\n\t\tif(text){\t\t\n\t\t\tconst newTask = await serverAddTask(text)\t\t\t//захист від пустого інпуту\n\t\t\tsetTask([...task, newTask])\t\t\t\t\t//формування данних таски \n\t\t\t//{id: randomInteger(0, 10000), text, done: false}\n\t\t}\n  \t}\n\n\tconst selectTask = (id) =>{\n\t\tsetSelectedItems(prev => prev.includes(id) ? prev.filter(i => i !== id) : [...prev, id]\t\t//додавання в стейт id тих таск які обрані користувачем \n\t\t\n\t\t)\n\t}\n\n\tconst toogleStatus = async() => {\n\t\tawait serverMarkTaskAsDone(selectedItems)\n\t\tsetTask(prev => prev.map(task => selectedItems.includes(task.id) ? {...task, done: !task.done} : task));\t//зміна поля done\n\t\tsetSelectedItems([])\n\t}\n\n\tconst deleteTask = async () => {\n\t\tawait serverDeleteTask(selectedItems)\n\t\tsetTask(prev => prev.filter(task => !selectedItems.includes(task.id)  ));\t//фільтрація стейту з тасками по id, ті що обрані будуть відалені фільтрацією\n\t\tsetSelectedItems([])\n\t}\n\n\t\n    const filterTasks = (items, filter) => {\n        if(filter === 'done'){\n            return items.filter(item => item.done)\n        }if(filter === 'unDone'){\n            return items.filter(item => !item.done)\n        }else{\n            return items\n        }\n    }\n\n\n\tconst updateList = (filter) => {\n\t\tsetFilter(filter)\n\t}\n\n\n  const startEdit = (id, currentText) => {\n\tconsole.log(id, currentText)\n\tsetEditedId(id);\n\tsetEditedText(currentText);\n  };\n  \n  const cancelEdit = () => {\n\tsetEditedId(null);\n\tsetEditedText('');\n  };\n  \n  const saveEdit = async (id) => {\n\tconst update = await serverEditTask(id, editedText)\n\tconsole.log(update)\n\tsetTask(prevTasks =>\n\t  prevTasks.map(item =>\n\t\titem.id === id ? update : item\n\t  )\n\t);\n\tcancelEdit(); // сбрасываем редактирование\n  };\n\n\n\n\tconst listOfTasks = filterTasks(task, filter)\n\n \t return (\n    \t<div className='container'>\n        \t<Panel addTask={addTask} \n\t\t\ttoogleStatus={toogleStatus} \n\t\t\tdeleteTask={deleteTask} \n\t\t\tselectedItems={selectedItems} \n\t\t\tupdateList={updateList} \n\t\t\tfilter={filter}\n\t\t\t/>\n\n        \t<div className='App'>\n      \n\n        \t\t<List task={listOfTasks} \n\t\t\t\tselectTask={selectTask} \n\t\t\t\tselectedItems={selectedItems} \n\t\t\t\tstartEdit={startEdit} \n\t\t\t\tsaveEdit={saveEdit} \n\t\t\t\tsetEditedText={setEditedText}\n\t\t\t\tcancelEdit={cancelEdit}\n\t\t\t\teditedId={editedId}\n\t\t\t\teditedText={editedText}\n\t\t\t\t/>\n      \n    \t</div>\n    \t</div>\n\n  \t);\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}