{"ast":null,"code":"var _jsxFileName = \"E:\\\\1practick_js\\\\task-manager\\\\tasc-manager\\\\client\\\\src\\\\components\\\\list\\\\List.js\";\nimport './List.css';\nimport ListItem from '../listItem/ListItem';\nimport whatsNext from '../../resources/whats-next.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst List = ({\n  task,\n  selectTask,\n  selectedItems,\n  startEdit,\n  saveEdit,\n  editedId,\n  editedText,\n  cancelEdit,\n  setEditedText\n}) => {\n  const elem = task.map(i => /*#__PURE__*/_jsxDEV(ListItem, {\n    task: i,\n    isEditing: editedId === i.id,\n    selectTask: selectTask,\n    selectedItems: selectedItems,\n    startEdit: startEdit,\n    saveEdit: saveEdit,\n    setEditedText: setEditedText,\n    cancelEdit: cancelEdit,\n    editedText: editedText\n  }, i.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 11\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"imgWhatsNext\",\n      src: whatsNext,\n      alt: \"whatsNext\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: elem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["ListItem","whatsNext","jsxDEV","_jsxDEV","Fragment","_Fragment","List","task","selectTask","selectedItems","startEdit","saveEdit","editedId","editedText","cancelEdit","setEditedText","elem","map","i","isEditing","id","fileName","_jsxFileName","lineNumber","columnNumber","children","className","src","alt","_c","$RefreshReg$"],"sources":["E:/1practick_js/task-manager/tasc-manager/client/src/components/list/List.js"],"sourcesContent":["import './List.css';\r\nimport ListItem from '../listItem/ListItem';\r\nimport whatsNext from '../../resources/whats-next.png'\r\n\r\n\r\n\r\n\r\nconst List = ({task, selectTask,selectedItems, startEdit, saveEdit, editedId, editedText, cancelEdit, setEditedText}) => {\r\n\r\n\r\n\r\n \r\n\r\n    const elem = task.map(i => \t\r\n          <ListItem key={i.id}\r\n           task={i} \r\n           isEditing={editedId === i.id}\r\n           selectTask={selectTask}  \r\n           selectedItems={selectedItems} \r\n           startEdit={startEdit} \r\n           saveEdit={saveEdit} \r\n           setEditedText={setEditedText}\r\n           cancelEdit={cancelEdit}\r\n           editedText={editedText}\r\n           />\r\n        \r\n  )\r\n\r\n\r\n    return(\r\n        <>\r\n        <img className='imgWhatsNext' src={whatsNext} alt=\"whatsNext\" />\r\n            <ul>\r\n                {elem}\r\n            </ul>\r\n        </>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default List\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAO,YAAY;AACnB,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,SAAS,MAAM,gCAAgC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAKtD,MAAMC,IAAI,GAAGA,CAAC;EAACC,IAAI;EAAEC,UAAU;EAACC,aAAa;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAa,CAAC,KAAK;EAMrH,MAAMC,IAAI,GAAGT,IAAI,CAACU,GAAG,CAACC,CAAC,iBACjBf,OAAA,CAACH,QAAQ;IACRO,IAAI,EAAEW,CAAE;IACRC,SAAS,EAAEP,QAAQ,KAAKM,CAAC,CAACE,EAAG;IAC7BZ,UAAU,EAAEA,UAAW;IACvBC,aAAa,EAAEA,aAAc;IAC7BC,SAAS,EAAEA,SAAU;IACrBC,QAAQ,EAAEA,QAAS;IACnBI,aAAa,EAAEA,aAAc;IAC7BD,UAAU,EAAEA,UAAW;IACvBD,UAAU,EAAEA;EAAW,GATTK,CAAC,CAACE,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAUjB,CAEV,CAAC;EAGC,oBACIrB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACAtB,OAAA;MAAKuB,SAAS,EAAC,cAAc;MAACC,GAAG,EAAE1B,SAAU;MAAC2B,GAAG,EAAC;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5DrB,OAAA;MAAAsB,QAAA,EACKT;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACP,CAAC;AAIX,CAAC;AAAAK,EAAA,GAhCKvB,IAAI;AAkCV,eAAeA,IAAI;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}