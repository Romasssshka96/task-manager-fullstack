{"ast":null,"code":"import pancil from'../../resources/pancil.png';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ListItem=_ref=>{let{selectTask,task,selectedItems,startEdit,isEditing,saveEdit,setEditedText,cancelEdit,editedText}=_ref;const colorStatus=()=>{if(selectedItems.includes(task.id)){return{background:' #FFA07A'};}else if(task.done){return{background:'rgb(0, 255, 127)'};}else{return{background:' rgb(252, 232, 116)'};}};//console.log(task.task)\nconsole.log(setEditedText);return/*#__PURE__*/_jsx(_Fragment,{children:isEditing?/*#__PURE__*/_jsxs(\"div\",{className:\"editingInputBlock\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"editingInput\",value:editedText,onChange:e=>setEditedText(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{className:\"editBtnBlock\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"confirm\",onClick:()=>saveEdit(task.id),children:\" \\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"}),/*#__PURE__*/_jsx(\"button\",{className:\"cancellation\",onClick:()=>cancelEdit(),children:\" \\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"})]})]}):/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"status\",style:colorStatus(),children:task.done?'выполнено':'в работе'}),/*#__PURE__*/_jsxs(\"h2\",{className:\"task\",children:[\"task: \",task.text]}),/*#__PURE__*/_jsxs(\"div\",{className:\"listBtnGroup\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"pancil\",onClick:()=>startEdit(task.id,task.text),src:pancil,alt:\"pancil\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>selectTask(task.id),className:\"chooseBtn\",children:\"choose\"})]})]})});};export default ListItem;","map":{"version":3,"names":["pancil","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ListItem","_ref","selectTask","task","selectedItems","startEdit","isEditing","saveEdit","setEditedText","cancelEdit","editedText","colorStatus","includes","id","background","done","console","log","children","className","value","onChange","e","target","onClick","style","text","src","alt"],"sources":["E:/1practick_js/task-manager/tasc-manager/client/src/components/listItem/ListItem.js"],"sourcesContent":["import pancil from '../../resources/pancil.png'\r\n\r\nconst ListItem = ({selectTask, task, selectedItems, startEdit, isEditing, saveEdit, setEditedText, cancelEdit, editedText}) => {\r\n\r\n    const colorStatus =()=>{ \r\n\r\n        if(selectedItems.includes(task.id)){\r\n            return {background:' #FFA07A'}\r\n        }else if(task.done){\r\n            return {background:'rgb(0, 255, 127)'}\r\n        }else{ return {background:' rgb(252, 232, 116)'}}\r\n\r\n    }\r\n    //console.log(task.task)\r\n\r\n    console.log(setEditedText)\r\n\r\n    return(\r\n        <>\r\n        {isEditing ? (\r\n                    \r\n          <div className='editingInputBlock'>\r\n            <input className='editingInput'\r\n              value={editedText}\r\n              onChange={(e) => setEditedText(e.target.value)}\r\n            />\r\n            <div className=\"editBtnBlock\">\r\n                <button className='confirm' onClick={() => saveEdit(task.id)}> Сохранить</button>\r\n                <button className='cancellation' onClick={() => cancelEdit()}> Отмена</button>\r\n            </div>\r\n\r\n          </div>\r\n          \r\n        ) : (\r\n\r\n            <li>\r\n\r\n                <h2 className='status' style={colorStatus()} >\r\n                    {task.done ? 'выполнено' : 'в работе'}\r\n                </h2>\r\n\r\n                <h2 className='task'>task: {task.text}</h2>\r\n                <div className=\"listBtnGroup\">\r\n                    <img className='pancil' onClick={() => startEdit(task.id, task.text)} src={pancil} alt=\"pancil\" />\r\n                    <button onClick={()=>selectTask(task.id)}  className='chooseBtn'>choose</button>\r\n                </div>\r\n\r\n\r\n            </li>\r\n          )\r\n        }\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ListItem\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,MAAM,KAAM,4BAA4B,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE/C,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAA8G,IAA7G,CAACC,UAAU,CAAEC,IAAI,CAAEC,aAAa,CAAEC,SAAS,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,aAAa,CAAEC,UAAU,CAAEC,UAAU,CAAC,CAAAT,IAAA,CAEtH,KAAM,CAAAU,WAAW,CAAEA,CAAA,GAAI,CAEnB,GAAGP,aAAa,CAACQ,QAAQ,CAACT,IAAI,CAACU,EAAE,CAAC,CAAC,CAC/B,MAAO,CAACC,UAAU,CAAC,UAAU,CAAC,CAClC,CAAC,IAAK,IAAGX,IAAI,CAACY,IAAI,CAAC,CACf,MAAO,CAACD,UAAU,CAAC,kBAAkB,CAAC,CAC1C,CAAC,IAAI,CAAE,MAAO,CAACA,UAAU,CAAC,qBAAqB,CAAC,EAEpD,CAAC,CACD;AAEAE,OAAO,CAACC,GAAG,CAACT,aAAa,CAAC,CAE1B,mBACIb,IAAA,CAAAI,SAAA,EAAAmB,QAAA,CACCZ,SAAS,cAERT,KAAA,QAAKsB,SAAS,CAAC,mBAAmB,CAAAD,QAAA,eAChCvB,IAAA,UAAOwB,SAAS,CAAC,cAAc,CAC7BC,KAAK,CAAEV,UAAW,CAClBW,QAAQ,CAAGC,CAAC,EAAKd,aAAa,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAChD,CAAC,cACFvB,KAAA,QAAKsB,SAAS,CAAC,cAAc,CAAAD,QAAA,eACzBvB,IAAA,WAAQwB,SAAS,CAAC,SAAS,CAACK,OAAO,CAAEA,CAAA,GAAMjB,QAAQ,CAACJ,IAAI,CAACU,EAAE,CAAE,CAAAK,QAAA,CAAC,yDAAU,CAAQ,CAAC,cACjFvB,IAAA,WAAQwB,SAAS,CAAC,cAAc,CAACK,OAAO,CAAEA,CAAA,GAAMf,UAAU,CAAC,CAAE,CAAAS,QAAA,CAAC,uCAAO,CAAQ,CAAC,EAC7E,CAAC,EAEH,CAAC,cAIJrB,KAAA,OAAAqB,QAAA,eAEIvB,IAAA,OAAIwB,SAAS,CAAC,QAAQ,CAACM,KAAK,CAAEd,WAAW,CAAC,CAAE,CAAAO,QAAA,CACvCf,IAAI,CAACY,IAAI,CAAG,WAAW,CAAG,UAAU,CACrC,CAAC,cAELlB,KAAA,OAAIsB,SAAS,CAAC,MAAM,CAAAD,QAAA,EAAC,QAAM,CAACf,IAAI,CAACuB,IAAI,EAAK,CAAC,cAC3C7B,KAAA,QAAKsB,SAAS,CAAC,cAAc,CAAAD,QAAA,eACzBvB,IAAA,QAAKwB,SAAS,CAAC,QAAQ,CAACK,OAAO,CAAEA,CAAA,GAAMnB,SAAS,CAACF,IAAI,CAACU,EAAE,CAAEV,IAAI,CAACuB,IAAI,CAAE,CAACC,GAAG,CAAElC,MAAO,CAACmC,GAAG,CAAC,QAAQ,CAAE,CAAC,cAClGjC,IAAA,WAAQ6B,OAAO,CAAEA,CAAA,GAAItB,UAAU,CAACC,IAAI,CAACU,EAAE,CAAE,CAAEM,SAAS,CAAC,WAAW,CAAAD,QAAA,CAAC,QAAM,CAAQ,CAAC,EAC/E,CAAC,EAGN,CACL,CAGD,CAAC,CAGX,CAAC,CAID,cAAe,CAAAlB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}