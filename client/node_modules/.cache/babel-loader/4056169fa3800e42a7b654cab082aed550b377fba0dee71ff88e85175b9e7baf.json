{"ast":null,"code":"var _jsxFileName = \"E:\\\\1practick_js\\\\task-manager\\\\tasc-manager\\\\client\\\\src\\\\components\\\\list\\\\List.js\";\nimport './List.css';\nimport ListItem from '../listItem/ListItem';\nimport whatsNext from '../../resources/whats-next.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst List = ({\n  task,\n  selectTask,\n  selectedItems\n}) => {\n  const elem = task.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: editingId === i.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: editedText,\n        onChange: e => setEditedText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => saveEdit(i.id),\n        children: \" \\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => cancelEdit(),\n        children: \" \\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(ListItem, {\n      task: i,\n      selectTask: selectTask,\n      selectedItems: selectedItems\n    }, i.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)\n  }, i.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 34\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"imgWhatsNext\",\n      src: whatsNext,\n      alt: \"whatsNext\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: elem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["ListItem","whatsNext","jsxDEV","_jsxDEV","Fragment","_Fragment","List","task","selectTask","selectedItems","elem","map","i","children","editingId","id","value","editedText","onChange","e","setEditedText","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","saveEdit","cancelEdit","className","src","alt","_c","$RefreshReg$"],"sources":["E:/1practick_js/task-manager/tasc-manager/client/src/components/list/List.js"],"sourcesContent":["import './List.css';\r\nimport ListItem from '../listItem/ListItem';\r\nimport whatsNext from '../../resources/whats-next.png'\r\n\r\n\r\n\r\nconst List = ({task, selectTask,selectedItems}) => {\r\n\r\n\r\n\r\n \r\n\r\n    const elem = task.map(i => \t(<div key={i.id}>\r\n        {editingId === i.id ? (\r\n          <>\r\n            <input\r\n              value={editedText}\r\n              onChange={(e) => setEditedText(e.target.value)}\r\n            />\r\n            <button onClick={() => saveEdit(i.id)}> Сохранить</button>\r\n            <button onClick={() => cancelEdit()}> Отмена</button>\r\n          </>\r\n        ) : (\r\n          <ListItem key={i.id} task={i} selectTask={selectTask}  selectedItems={selectedItems}/>\r\n        )}\r\n      </div>\r\n  ))\r\n\r\n\r\n    return(\r\n        <>\r\n        <img className='imgWhatsNext' src={whatsNext} alt=\"whatsNext\" />\r\n            <ul>\r\n                {elem}\r\n            </ul>\r\n        </>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default List\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAO,YAAY;AACnB,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,SAAS,MAAM,gCAAgC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAItD,MAAMC,IAAI,GAAGA,CAAC;EAACC,IAAI;EAAEC,UAAU;EAACC;AAAa,CAAC,KAAK;EAM/C,MAAMC,IAAI,GAAGH,IAAI,CAACI,GAAG,CAACC,CAAC,iBAAMT,OAAA;IAAAU,QAAA,EACxBC,SAAS,KAAKF,CAAC,CAACG,EAAE,gBACjBZ,OAAA,CAAAE,SAAA;MAAAQ,QAAA,gBACEV,OAAA;QACEa,KAAK,EAAEC,UAAW;QAClBC,QAAQ,EAAGC,CAAC,IAAKC,aAAa,CAACD,CAAC,CAACE,MAAM,CAACL,KAAK;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFtB,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAMC,QAAQ,CAACf,CAAC,CAACG,EAAE,CAAE;QAAAF,QAAA,EAAC;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1DtB,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAME,UAAU,CAAC,CAAE;QAAAf,QAAA,EAAC;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACrD,CAAC,gBAEHtB,OAAA,CAACH,QAAQ;MAAYO,IAAI,EAAEK,CAAE;MAACJ,UAAU,EAAEA,UAAW;MAAEC,aAAa,EAAEA;IAAc,GAArEG,CAAC,CAACG,EAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkE;EACtF,GAZkCb,CAAC,CAACG,EAAE;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAapC,CACR,CAAC;EAGA,oBACItB,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACAV,OAAA;MAAK0B,SAAS,EAAC,cAAc;MAACC,GAAG,EAAE7B,SAAU;MAAC8B,GAAG,EAAC;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5DtB,OAAA;MAAAU,QAAA,EACKH;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACP,CAAC;AAIX,CAAC;AAAAO,EAAA,GAjCK1B,IAAI;AAmCV,eAAeA,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}