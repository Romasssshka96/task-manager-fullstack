{"ast":null,"code":"var _jsxFileName = \"E:\\\\1practick_js\\\\task-manager\\\\tasc-manager\\\\src\\\\components\\\\app\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Panel from '../panel/Panel';\nimport List from '../list/List';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [task, setTask] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  console.log(selectedItems);\n  console.log(task);\n  const randomInteger = (min, max) => {\n    let rand = min + Math.random() * (max + 1 - min);\n    return Math.floor(rand);\n  };\n  const selectTask = id => {\n    setSelectedItems(prev => prev.includes(id) ? prev.filter(i => i !== id) : [...prev, id]);\n  };\n  const toogleStatus = () => {\n    setTask(prev => prev.map(task => selectTask.includes(task.id) ? {\n      ...task,\n      done: !done\n    } : task));\n  };\n  const addTask = text => {\n    setTask([...task, {\n      id: randomInteger(0, 10000),\n      text,\n      done: false\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Panel, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        task: task,\n        selectTask: selectTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 6\n  }, this);\n}\n_s(App, \"pf8s9wcrJb9P6WFHlNtccvI9AnA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Panel","List","jsxDEV","_jsxDEV","App","_s","task","setTask","selectedItems","setSelectedItems","console","log","randomInteger","min","max","rand","Math","random","floor","selectTask","id","prev","includes","filter","i","toogleStatus","map","done","addTask","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/1practick_js/task-manager/tasc-manager/src/components/app/App.js"],"sourcesContent":["import { useState } from 'react';\n\nimport Panel from '../panel/Panel';\nimport List from '../list/List';\nimport './App.css';\n\nfunction App() {\n\n  const [task, setTask] = useState([])\n  const [selectedItems, setSelectedItems] = useState([])\n\n  console.log(selectedItems)\n  console.log(task)\n    const randomInteger =(min, max)=> {\n        let rand = min + Math.random() * (max + 1 - min);\n        return Math.floor(rand);\n    }\n\n\tconst selectTask = (id) =>{\n\t\tsetSelectedItems(prev => prev.includes(id) ? prev.filter(i => i !== id) : [...prev, id]\n\t\t\n\t\t)\n\t}\n\n\tconst toogleStatus = () => {\n\t\tsetTask(prev => prev.map(task => selectTask.includes(task.id) ? {...task, done: !done} : task))\n\t}\n\n\n\tconst addTask = (text) =>{\n\t\tsetTask([...task, {id: randomInteger(0, 10000), text, done: false}])\n  \t}\n\n \t return (\n    \t<div className='container'>\n        \t<Panel addTask={addTask}/>\n        \t<div className='App'>\n      \n\n        \n        \t\t<List task={task} selectTask={selectTask}/>\n      \n    \t</div>\n    \t</div>\n\n  \t);\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtDW,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC;EAC1BE,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;EACf,MAAMM,aAAa,GAAEA,CAACC,GAAG,EAAEC,GAAG,KAAI;IAC9B,IAAIC,IAAI,GAAGF,GAAG,GAAGG,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIH,GAAG,GAAG,CAAC,GAAGD,GAAG,CAAC;IAChD,OAAOG,IAAI,CAACE,KAAK,CAACH,IAAI,CAAC;EAC3B,CAAC;EAEJ,MAAMI,UAAU,GAAIC,EAAE,IAAI;IACzBX,gBAAgB,CAACY,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAACF,EAAE,CAAC,GAAGC,IAAI,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,EAAE,CAAC,GAAG,CAAC,GAAGC,IAAI,EAAED,EAAE,CAEtF,CAAC;EACF,CAAC;EAED,MAAMK,YAAY,GAAGA,CAAA,KAAM;IAC1BlB,OAAO,CAACc,IAAI,IAAIA,IAAI,CAACK,GAAG,CAACpB,IAAI,IAAIa,UAAU,CAACG,QAAQ,CAAChB,IAAI,CAACc,EAAE,CAAC,GAAG;MAAC,GAAGd,IAAI;MAAEqB,IAAI,EAAE,CAACA;IAAI,CAAC,GAAGrB,IAAI,CAAC,CAAC;EAChG,CAAC;EAGD,MAAMsB,OAAO,GAAIC,IAAI,IAAI;IACxBtB,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;MAACc,EAAE,EAAER,aAAa,CAAC,CAAC,EAAE,KAAK,CAAC;MAAEiB,IAAI;MAAEF,IAAI,EAAE;IAAK,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,oBACExB,OAAA;IAAK2B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB5B,OAAA,CAACH,KAAK;MAAC4B,OAAO,EAAEA;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC1BhC,OAAA;MAAK2B,SAAS,EAAC,KAAK;MAAAC,QAAA,eAInB5B,OAAA,CAACF,IAAI;QAACK,IAAI,EAAEA,IAAK;QAACa,UAAU,EAAEA;MAAW;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGX;AAAC9B,EAAA,CAxCQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}