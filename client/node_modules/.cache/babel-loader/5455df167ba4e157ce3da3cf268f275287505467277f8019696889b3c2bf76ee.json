{"ast":null,"code":"import _objectSpread from\"E:/1practick_js/task-manager/tasc-manager/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect}from'react';import{serverGetTasks,serverDeleteTask,serverAddTask,serverMarkTaskAsDone}from'../../services/task';import Panel from'../panel/Panel';import List from'../list/List';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[task,setTask]=useState([]);const[selectedItems,setSelectedItems]=useState([]);useEffect(()=>{serverGetTasks().then(setTask);},[]);console.log(selectedItems);console.log(task);const addTask=async text=>{if(text){const newTask=await serverAddTask(text);//захист від пустого інпуту\nsetTask([...task,newTask]);//формування данних таски \n//{id: randomInteger(0, 10000), text, done: false}\n}};const selectTask=id=>{setSelectedItems(prev=>prev.includes(id)?prev.filter(i=>i!==id):[...prev,id]//додавання в стейт id тих таск які обрані користувачем \n);};const toogleStatus=async()=>{await serverMarkTaskAsDone(selectedItems);setTask(prev=>prev.map(task=>selectedItems.includes(task.id)?_objectSpread(_objectSpread({},task),{},{done:!task.done}):task));//зміна поля done\nsetSelectedItems([]);};const deleteTask=async()=>{await serverDeleteTask(selectedItems);setTask(prev=>prev.filter(task=>!selectedItems.includes(task.id)));//фільтрація стейту з тасками по id, ті що обрані будуть відалені фільтрацією\nsetSelectedItems([]);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Panel,{addTask:addTask,toogleStatus:toogleStatus,deleteTask:deleteTask,selectedItems:selectedItems}),/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(List,{task:task,selectTask:selectTask,selectedItems:selectedItems})})]});}export default App;","map":{"version":3,"names":["useState","useEffect","serverGetTasks","serverDeleteTask","serverAddTask","serverMarkTaskAsDone","Panel","List","jsx","_jsx","jsxs","_jsxs","App","task","setTask","selectedItems","setSelectedItems","then","console","log","addTask","text","newTask","selectTask","id","prev","includes","filter","i","toogleStatus","map","_objectSpread","done","deleteTask","className","children"],"sources":["E:/1practick_js/task-manager/tasc-manager/src/components/app/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { serverGetTasks, serverDeleteTask, serverAddTask, serverMarkTaskAsDone } from '../../services/task';\n\nimport Panel from '../panel/Panel';\nimport List from '../list/List';\nimport './App.css';\n\nfunction App() {\n\n  \tconst [task, setTask] = useState([])\n  \tconst [selectedItems, setSelectedItems] = useState([])\n\n\tuseEffect(()=>{\n\t\tserverGetTasks()\n\t\t.then(setTask)\n\t}, [])\n\n  console.log(selectedItems)\n  console.log(task)\n\n\n\n\n\tconst addTask = async (text) =>{\n\t\tif(text){\t\t\n\t\t\tconst newTask = await serverAddTask(text)\t\t\t//захист від пустого інпуту\n\t\t\tsetTask([...task, newTask])\t\t\t\t\t//формування данних таски \n\t\t\t//{id: randomInteger(0, 10000), text, done: false}\n\t\t}\n  \t}\n\n\tconst selectTask = (id) =>{\n\t\tsetSelectedItems(prev => prev.includes(id) ? prev.filter(i => i !== id) : [...prev, id]\t\t//додавання в стейт id тих таск які обрані користувачем \n\t\t\n\t\t)\n\t}\n\n\tconst toogleStatus = async() => {\n\t\tawait serverMarkTaskAsDone(selectedItems)\n\t\tsetTask(prev => prev.map(task => selectedItems.includes(task.id) ? {...task, done: !task.done} : task));\t//зміна поля done\n\t\tsetSelectedItems([])\n\t}\n\n\tconst deleteTask = async () => {\n\t\tawait serverDeleteTask(selectedItems)\n\t\tsetTask(prev => prev.filter(task => !selectedItems.includes(task.id)  ));\t//фільтрація стейту з тасками по id, ті що обрані будуть відалені фільтрацією\n\t\tsetSelectedItems([])\n\t}\n\n\n\n\n \t return (\n    \t<div className='container'>\n        \t<Panel addTask={addTask} toogleStatus={toogleStatus} deleteTask={deleteTask} selectedItems={selectedItems} />\n        \t<div className='App'>\n      \n\n        \n        \t\t<List task={task} selectTask={selectTask} selectedItems={selectedItems} />\n      \n    \t</div>\n    \t</div>\n\n  \t);\n}\n\nexport default App;\n"],"mappings":"8HAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,cAAc,CAAEC,gBAAgB,CAAEC,aAAa,CAAEC,oBAAoB,KAAQ,qBAAqB,CAE3G,MAAO,CAAAC,KAAK,KAAM,gBAAgB,CAClC,MAAO,CAAAC,IAAI,KAAM,cAAc,CAC/B,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEZ,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACe,aAAa,CAAEC,gBAAgB,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAExDC,SAAS,CAAC,IAAI,CACbC,cAAc,CAAC,CAAC,CACfe,IAAI,CAACH,OAAO,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CAELI,OAAO,CAACC,GAAG,CAACJ,aAAa,CAAC,CAC1BG,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC,CAKlB,KAAM,CAAAO,OAAO,CAAG,KAAO,CAAAC,IAAI,EAAI,CAC9B,GAAGA,IAAI,CAAC,CACP,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAlB,aAAa,CAACiB,IAAI,CAAC,CAAG;AAC5CP,OAAO,CAAC,CAAC,GAAGD,IAAI,CAAES,OAAO,CAAC,CAAC,CAAK;AAChC;AACD,CACC,CAAC,CAEH,KAAM,CAAAC,UAAU,CAAIC,EAAE,EAAI,CACzBR,gBAAgB,CAACS,IAAI,EAAIA,IAAI,CAACC,QAAQ,CAACF,EAAE,CAAC,CAAGC,IAAI,CAACE,MAAM,CAACC,CAAC,EAAIA,CAAC,GAAKJ,EAAE,CAAC,CAAG,CAAC,GAAGC,IAAI,CAAED,EAAE,CAAG;AAEzF,CAAC,CACF,CAAC,CAED,KAAM,CAAAK,YAAY,CAAG,KAAAA,CAAA,GAAW,CAC/B,KAAM,CAAAxB,oBAAoB,CAACU,aAAa,CAAC,CACzCD,OAAO,CAACW,IAAI,EAAIA,IAAI,CAACK,GAAG,CAACjB,IAAI,EAAIE,aAAa,CAACW,QAAQ,CAACb,IAAI,CAACW,EAAE,CAAC,CAAAO,aAAA,CAAAA,aAAA,IAAOlB,IAAI,MAAEmB,IAAI,CAAE,CAACnB,IAAI,CAACmB,IAAI,GAAInB,IAAI,CAAC,CAAC,CAAE;AACzGG,gBAAgB,CAAC,EAAE,CAAC,CACrB,CAAC,CAED,KAAM,CAAAiB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC9B,KAAM,CAAA9B,gBAAgB,CAACY,aAAa,CAAC,CACrCD,OAAO,CAACW,IAAI,EAAIA,IAAI,CAACE,MAAM,CAACd,IAAI,EAAI,CAACE,aAAa,CAACW,QAAQ,CAACb,IAAI,CAACW,EAAE,CAAG,CAAC,CAAC,CAAE;AAC1ER,gBAAgB,CAAC,EAAE,CAAC,CACrB,CAAC,CAKC,mBACEL,KAAA,QAAKuB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtB1B,IAAA,CAACH,KAAK,EAACc,OAAO,CAAEA,OAAQ,CAACS,YAAY,CAAEA,YAAa,CAACI,UAAU,CAAEA,UAAW,CAAClB,aAAa,CAAEA,aAAc,CAAE,CAAC,cAC7GN,IAAA,QAAKyB,SAAS,CAAC,KAAK,CAAAC,QAAA,cAInB1B,IAAA,CAACF,IAAI,EAACM,IAAI,CAAEA,IAAK,CAACU,UAAU,CAAEA,UAAW,CAACR,aAAa,CAAEA,aAAc,CAAE,CAAC,CAE1E,CAAC,EACD,CAAC,CAGX,CAEA,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}